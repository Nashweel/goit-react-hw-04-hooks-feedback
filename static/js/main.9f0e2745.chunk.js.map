{"version":3,"sources":["components/Feedback/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","components/data/constans.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","className","s","FeedbackButton","type","onClick","Notification","message","prototype","PropTypes","string","isRequired","Statistics","good","neutral","bad","total","positivePercentage","StatList","StatItem","Section","title","children","CONSTANS_FEEDBACK","App","useState","setGood","setNeutral","setBad","visible","setVisible","state","Math","round","countPostivePercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PA0BeA,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,UAAWC,IAAEC,eACbC,KAAK,SAELC,QAAS,kBAAMP,EAAgBE,IAJjC,SAMGA,GAHIA,S,OCRTM,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaE,UAAY,CACvBD,Q,OAASE,EAAUC,OAAOC,YAGbL,Q,gBCqBAM,EA1BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACGD,EAAQ,GACP,qBAAIf,UAAWC,IAAEgB,SAAjB,UACE,qBAAIjB,UAAWC,IAAEiB,SAAjB,mBAAkCN,KAClC,qBAAIZ,UAAWC,IAAEiB,SAAjB,sBAAqCL,KACrC,qBAAIb,UAAWC,IAAEiB,SAAjB,kBAAiCJ,KACjC,qBAAId,UAAWC,IAAEiB,SAAjB,oBAAmCH,KACnC,qBAAIf,UAAWC,IAAEiB,SAAjB,kCACwBF,EADxB,aCIKG,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCPMC,EAAoB,CAAC,OAAQ,UAAW,OCQtC,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAmCA,OACE,gCACE,cAAC,EAAD,CAAST,MAAM,6BAAf,SACE,cAAC,EAAD,CACExB,QAAS0B,EACTzB,gBAtCgB,SAACD,GACvB,OAAQA,GACN,IAAK,OACH6B,GAAQ,SAACK,GAAD,OAAWA,EAAQ,KAC3B,MAEF,IAAK,UACHJ,GAAW,SAACI,GAAD,OAAWA,EAAQ,KAC9B,MAEF,IAAK,MACHH,GAAO,SAACG,GAAD,OAAWA,EAAQ,KAM9BD,GAAW,QAwBT,eAAC,EAAD,CAAST,MAAM,aAAf,WACIQ,GAAW,cAAC,EAAD,CAActB,QAAQ,sBAClCsB,GACC,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MA3BMH,EAAOC,EAAUC,EA4BvBE,mBAxBqB,WAC7B,IAAIA,EAAqB,EAIzB,OAHa,IAATJ,GAAsB,IAARE,IAChBE,EAAsBJ,GAAQE,EAAMF,GAAS,KAExCmB,KAAKC,MAAMhB,GAmBUiB,WCzDhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,SAAW,6BAA6B,SAAW,+B,kBCArED,EAAOC,QAAU,CAAC,eAAiB,oC","file":"static/js/main.9f0e2745.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Feedback.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map((option) => (\n        <button\n          className={s.FeedbackButton}\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.prototype = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total > 0 && (\n        <ul className={s.StatList}>\n          <li className={s.StatItem}>Good: {good}</li>\n          <li className={s.StatItem}>Neutral: {neutral}</li>\n          <li className={s.StatItem}>Bad: {bad}</li>\n          <li className={s.StatItem}>Total: {total}</li>\n          <li className={s.StatItem}>\n            Positive Percentage: {positivePercentage}%\n          </li>\n        </ul>\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","export const CONSTANS_FEEDBACK = [\"good\", \"neutral\", \"bad\"];\n","import React, { useState } from \"react\";\n\nimport FeedbackOptions from \"./components/Feedback\";\nimport Notification from \"./components/Notification\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport { CONSTANS_FEEDBACK } from \"./components/data/constans\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [visible, setVisible] = useState(false);\n\n  const onLeaveFeedback = (options) => {\n    switch (options) {\n      case \"good\":\n        setGood((state) => state + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((state) => state + 1);\n        break;\n\n      case \"bad\":\n        setBad((state) => state + 1);\n        break;\n\n      default:\n        break;\n    }\n    setVisible(true);\n  };\n\n  const countTotalFeedbacks = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPostivePercentage = () => {\n    let positivePercentage = 0;\n    if (good !== 0 || bad !== 0) {\n      positivePercentage = (good / (bad + good)) * 100;\n    }\n    return Math.round(positivePercentage);\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave your feedback\">\n        <FeedbackOptions\n          options={CONSTANS_FEEDBACK}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {!visible && <Notification message=\"No feedback given\" />}\n        {visible && (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedbacks()}\n            positivePercentage={countPostivePercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatList\":\"Statistics_StatList__3oEMc\",\"StatItem\":\"Statistics_StatItem__1fQ3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackButton\":\"Feedback_FeedbackButton__TO8Uo\"};"],"sourceRoot":""}